import numpy as np

symbols = [
    " N",
    " C",
    " C",
    " C",
    " C",
    " C",
    " C",
    " H",
    " H",
    " H",
    " H",
    " H",
    " H",
    " H"
]

r = np.array([
   -4.50828292,   -0.13428199,   -0.42282001,
   -1.74967052,   -0.08243427,   -0.18388194,
   -0.34918909,    0.22020109,   -2.38135990,
   -0.48191410,   -0.31940275,    2.11448442,
    2.26798372,    0.28512973,   -2.28675367,
    2.12859001,   -0.25350696,    2.19934486,
    3.50966999,    0.04914705,   -0.00303017,
   -5.04741859,   -1.75821914,    0.53292980,
   -5.13314816,    1.18617336,    0.88379315,
   -1.32608752,    0.40193653,   -4.14515096,
   -1.54481154,   -0.55434205,    3.82635249,
    3.33181415,    0.51997997,   -3.99764585,
    3.08451468,   -0.43784146,    3.97982169,
    5.53681428,    0.09986770,    0.06664047
])

N  = r[ 0 :  3]
H1 = r[21 : 24]
NH1 = H1 - N
NH1 /= np.linalg.norm(NH1)
H2 = r[24 : 27]
NH2 = H2 - N
NH2 /= np.linalg.norm(NH2)

possible_bls = np.array([
    0.7, 0.8, 0.9, 
    1.03715, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,
        2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9,
    3.0, 4.0, 5.0, 6.0
])
with open("geom.data", 'w') as f:
    for i in range(possible_bls.shape[0]):
        for j in range(0, i + 1):
            rnew = r.copy()
            rnew[21 : 24] = possible_bls[i] * 1.8897261339212517 * NH1 + N
            rnew[24 : 27] = possible_bls[j] * 1.8897261339212517 * NH2 + N
            for k in range(14):
                print(symbols[k], end='', file=f)
                print("%14.8f" % rnew[3 * k    ], end='', file=f)
                print("%14.8f" % rnew[3 * k + 1], end='', file=f)
                print("%14.8f" % rnew[3 * k + 2], end='', file=f)
                print(file=f)
