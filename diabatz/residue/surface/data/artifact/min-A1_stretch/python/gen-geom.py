import numpy as np

symbols = [
    " N",
    " C",
    " C",
    " C",
    " C",
    " C",
    " C",
    " H",
    " H",
    " H",
    " H",
    " H",
    " H",
    " H"
]

r = np.array([
   -4.45191508,    0.16456951,   -0.00000044,
   -1.76950920,   -0.01450960,   -0.00000017,
   -0.42709272,   -0.00614023,   -2.26915461,
   -0.42709311,   -0.00613911,    2.26915449,
    2.18899559,   -0.00048238,   -2.25663889,
    2.18899521,   -0.00048127,    2.25663921,
    3.51497150,    0.00220900,    0.00000027,
   -5.18553783,   -0.71262666,   -1.55719571,
   -5.18553809,   -0.71262589,    1.55719514,
   -1.43053445,   -0.00050735,   -4.03181437,
   -1.43053512,   -0.00050537,    4.03181408,
    3.19141204,   -0.00106990,   -4.02099761,
    3.19141137,   -0.00106792,    4.02099809,
    5.54283323,    0.00502507,    0.00000044
])

N  = r[ 0 :  3]
H1 = r[21 : 24]
NH1 = H1 - N
NH1 /= np.linalg.norm(NH1)
H2 = r[24 : 27]
NH2 = H2 - N
NH2 /= np.linalg.norm(NH2)

possible_bls = np.array([
    0.7, 0.8, 0.9, 
    1.02236, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,
        2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9,
    3.0, 4.0, 5.0, 6.0
])
with open("geom.data", 'w') as f:
    for i in range(possible_bls.shape[0]):
        for j in range(0, i + 1):
            rnew = r.copy()
            rnew[21 : 24] = possible_bls[i] * 1.8897261339212517 * NH1 + N
            rnew[24 : 27] = possible_bls[j] * 1.8897261339212517 * NH2 + N
            for k in range(14):
                print(symbols[k], end='', file=f)
                print("%14.8f" % rnew[3 * k    ], end='', file=f)
                print("%14.8f" % rnew[3 * k + 1], end='', file=f)
                print("%14.8f" % rnew[3 * k + 2], end='', file=f)
                print(file=f)
