import numpy as np

symbols = [
    " N",
    " C",
    " C",
    " C",
    " C",
    " C",
    " C",
    " H",
    " H",
    " H",
    " H",
    " H",
    " H",
    " H"
]

r = np.array([
    0.00000000,    0.00000000,   -4.38960594,
    0.00000000,    0.00000000,   -1.77874052,
    0.00000000,   -2.33474742,   -0.39220601,
    0.00000000,    2.33474742,   -0.39220601,
    0.00000000,   -2.32424540,    2.17758183,
    0.00000000,    2.32424540,    2.17758183,
    0.00000000,    0.00000000,    3.47484756,
   -1.64860422,    0.00000000,   -5.37906111,
    1.64860422,    0.00000000,   -5.37906112,
    0.00000000,   -4.04579886,   -1.46528980,
    0.00000000,    4.04579886,   -1.46528980,
    0.00000000,   -4.05190402,    3.23200810,
    0.00000000,    4.05190402,    3.23200810,
    0.00000000,    0.00000000,    5.50382412
])

N  = r[ 0 :  3]
H1 = r[21 : 24]
NH1 = H1 - N
NH1 /= np.linalg.norm(NH1)
H2 = r[24 : 27]
NH2 = H2 - N
NH2 /= np.linalg.norm(NH2)

possible_bls = np.array([
    0.7, 0.8, 0.9, 
    1.01747, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,
        2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9,
    3.0, 4.0, 5.0, 6.0
])
with open("geom.data", 'w') as f:
    for i in range(possible_bls.shape[0]):
        for j in range(0, i + 1):
            rnew = r.copy()
            rnew[21 : 24] = possible_bls[i] * 1.8897261339212517 * NH1 + N
            rnew[24 : 27] = possible_bls[j] * 1.8897261339212517 * NH2 + N
            for k in range(14):
                print(symbols[k], end='', file=f)
                print("%14.8f" % rnew[3 * k    ], end='', file=f)
                print("%14.8f" % rnew[3 * k + 1], end='', file=f)
                print("%14.8f" % rnew[3 * k + 2], end='', file=f)
                print(file=f)
